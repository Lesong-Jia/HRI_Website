{"remainingRequest":"/Users/jialesong/Desktop/HRI_Website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jialesong/Desktop/HRI_Website/src/views/lastQuestionnaire/components/stepOne.vue?vue&type=style&index=0&id=7b279386&lang=less&scoped=true","dependencies":[{"path":"/Users/jialesong/Desktop/HRI_Website/src/views/lastQuestionnaire/components/stepOne.vue","mtime":1706923579000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/css-loader/dist/cjs.js","mtime":1706926220000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1706926220000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/postcss-loader/src/index.js","mtime":1706926220000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/less-loader/dist/cjs.js","mtime":1706926220000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/cache-loader/dist/cjs.js","mtime":1706926219000},{"path":"/Users/jialesong/Desktop/HRI_Website/node_modules/vue-loader/lib/index.js","mtime":1706926220000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjo6di1kZWVwIC5hbnQtaW5wdXQgewogIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50OwogIHdpZHRoOiAxMDAlOwp9Cjo6di1kZWVwIC5hbnQtaW5wdXQ6Zm9jdXMgewogIGJveC1zaGFkb3c6IG5vbmU7Cn0K"},{"version":3,"sources":["stepOne.vue"],"names":[],"mappings":";AAuHA;AACA;AACA;AACA;AACA;AACA;AACA","file":"stepOne.vue","sourceRoot":"src/views/lastQuestionnaire/components","sourcesContent":["<template>\n  <div>\n    <p><strong>Part 3 - Post-study Questions:</strong></p>\n    <p>\n      Please response to the following questions based on <strong\n        >your experience and assessment of All the Scenarios</strong\n      > you have completed in this study.\n    </p>\n    <a-form-model\n      ref=\"form\"\n      :model=\"form\"\n      @submit=\"handleSubmit\"\n      @submit.native.prevent\n      :labelCol=\"labelCol\"\n      :wrapperCol=\"wrapperCol\"\n    >\n      <p></p>\n      <!-- 打分题 -->\n      <table border=\"0\" width=\"100%\" align=\"center\">\n        <tr class=\"head\">\n          <td style=\"border-right: 1px solid #efefef\"></td>\n          <td v-for=\"headItem in headList\" :key=\"headItem\">\n            {{ headItem }}\n          </td>\n        </tr>\n        <tr v-for=\"(item, index) in questList\" :key=\"index\">\n          <a-form-model-item\n            :prop=\"'table.' + item.key\"\n            :rules=\"{\n              required: true,\n              trigger: 'blur',\n              message: 'please select',\n            }\"\n          >\n            <td class=\"require-radio\">\n              {{ item.content }}\n            </td>\n          </a-form-model-item>\n          <td\n            v-for=\"(radioItem, radioIndex) in headList\"\n            :key=\"radioItem + radioIndex\"\n          >\n            <a-radio\n              :style=\"radioStyle\"\n              :value=\"radioItem\"\n              @click=\"checkRadio(radioIndex + 1, item.key)\"\n              :checked=\"form['table'][item.key] == radioIndex + 1\"\n            />\n          </td>\n        </tr>\n      </table>\n    </a-form-model>\n  </div>\n</template>\n<script>\nimport { mapGetters } from \"vuex\";\nimport api from \"@/api/index.js\";\nimport { questList } from \"../tool\";\nimport { headList1 } from \"../../startQuestionnaire/tool\";\nexport default {\n  name: \"stepOne\",\n  data() {\n    return {\n      headList: headList1,\n      questList,\n      others: \"\",\n      form: {\n        table: {},\n      },\n      rulles: {},\n      radioStyle: {\n        display: \"block\",\n        height: \"30px\",\n        lineHeight: \"30px\",\n      },\n      labelCol: {\n        xs: { span: 18 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 19 },\n      },\n    };\n  },\n  mounted() {},\n  computed: {\n    ...mapGetters([\"gameStep\", \"allQuestionForm\"]),\n  },\n  methods: {\n    handleSubmit() {\n      const that = this;\n      this.$refs[\"form\"].validate(async (valid) => {\n        if (!valid) {\n          return;\n        }\n        //保存最后一次问卷\n        that.$store.commit(\"SET_ALL_QUESTION_FORM\", {\n          ...that.allQuestionForm,\n          last: { ...that.form },\n        });\n        const res = await api.submitForm(this.allQuestionForm);\n        if (res.code === 200) {\n          this.$message.success(\"Submitted successfully\");\n          this.$emit(\"changeLoading\", false);\n          that.$router.push(\"/last\");\n        } else {\n          this.$emit(\"changeLoading\", true);\n          this.$message.error(res.message);\n        }\n      });\n    },\n    checkRadio(item, key) {\n      this.$set(this.form.table, key, item);\n    },\n  },\n};\n</script>\n<style lang=\"less\" scoped>\n::v-deep .ant-input {\n  border: none !important;\n  width: 100%;\n}\n::v-deep .ant-input:focus {\n  box-shadow: none;\n}\n</style>"]}]}